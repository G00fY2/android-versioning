plugins {
    id 'java-gradle-plugin'
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id 'maven'
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.4"
}

def projectGroup = 'eu.appcom.gradle'
def projectName = "android-versioning"
def projectVersion = gitTag()

def projectURL = "https://github.com/appcom-interactive/android-versioning"
def projectGit = "https://github.com/appcom-interactive/android-versioning.git"

group projectGroup
version projectVersion

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    google()
}

dependencies {
    compileOnly gradleApi()

    implementation "com.android.tools.build:gradle:3.4.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation gradleTestKit()

    testImplementation "org.eclipse.jgit:org.eclipse.jgit:5.3.0.201903130848-r"
}

test {
    reports {
        junitXml.enabled = true
        html.enabled = true
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'jar'
            groupId projectGroup
            artifactId projectName
            version projectVersion
            name projectName
            url projectURL
            inceptionYear '2017'
            licenses {
                license {
                    name 'Apache-2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0'
                    distribution 'repo'
                }
            }
            scm {
                connection projectGit
                developerConnection projectGit
                url projectURL
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    publications = ['Publication']
    publish = true
    pkg {
        repo = 'Maven'
        name = projectName
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = projectGit
        version {
            name = projectVersion
            desc = 'Generate the android app version name and version code automatically (via git)'
            vcsTag = projectVersion
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
}

publishing {
    publications {
        Publication(MavenPublication) {
            artifact jar
            groupId projectGroup
            artifactId projectName

            version projectVersion

            artifact sourcesJar
        }
    }
}

def gitTag() {
    def revlist = 'git rev-list --tags --max-count=1'.execute([], project.rootDir).text.trim()
    def versionName = ('git describe --tags ' + revlist.toString()).execute([], project.rootDir).text.trim()
    if (versionName != null) {
        return versionName
    } else {
        return "NO_VERSION"
    }
}
